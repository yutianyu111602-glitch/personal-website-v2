没问题。我看了你 `AdvancedMusicOrganizer.tsx` 的结构（`export / organize / player` 三个 tab，顶部有“后端状态面板”），**问题主要是导出页的信息密度太高且纵向堆叠**。在不改变任何外观（颜色、阴影、边框透明度、字体、交互动效）和逻辑（事件、状态、请求函数名）的前提下，我给你一个“**仅改大小与位置**”的布局重排方案：只加/改容器类与 grid，不动面板内的按钮/输入/回调。

---

# 目标（不改外观与逻辑）

* 让 **Spotify 导出页**形成「左：表单/选项」「右：任务状态/日志」的双栏布局；
* 统一容器宽度（最大 1400px），一致的间距；
* 小屏回落为单列；
* 所有原背景/边框样式保留（仍用你代码里的 `rgba(192,197,206, …)`）。

---

# 结果布局（尺寸与位置）

* **整体容器**：`mx-auto w-full max-w-[1400px] px-4 lg:px-6`
* **主栅格**：`grid grid-cols-12 gap-4 lg:gap-6`

  * 左侧 **内容区**（表单/选项/目标/操作）：`col-span-12 lg:col-span-8 xl:col-span-9 space-y-4`
  * 右侧 **侧栏**（任务状态/进度/日志/队列）：`col-span-12 lg:col-span-4 xl:col-span-3 space-y-4`
* **日志/列表高度**：

  * 任务日志卡片：`max-h-[50vh] overflow-auto`
  * 文件列表（若有）：`max-h-[40vh] overflow-auto`

> 注：所有卡片内部仍沿用你原来的 `background: 'rgba(192,197,206,0.05~0.2)'` 与边框透明度，**不变**。

---

# 代码补丁（只调“容器/位置/尺寸”）

在 `src/components/AdvancedMusicOrganizer.tsx` 中找到：

```tsx
{state.currentTab === 'export' && (
  <motion.div key="export" ... className="space-y-6">
    {/* 原本的导出相关面板一大堆卡片纵向堆叠 */}
  </motion.div>
)}
```

把这个 **export 分支**替换为下面版本（**里面的每个原卡片组件，请直接移动到注释处**；保持原样式/逻辑/内容不变）：

```tsx
{state.currentTab === 'export' && (
  <motion.div
    key="export"
    initial={{ opacity: 0, x: -20 }}
    animate={{ opacity: 1, x: 0 }}
    exit={{ opacity: 0, x: 20 }}
    // 仅改变布局容器，不改卡片视觉
    className="mx-auto w-full max-w-[1400px] px-4 lg:px-6"
  >
    <div className="grid grid-cols-12 gap-4 lg:gap-6">
      {/* 左：表单/选项/目标/操作 */}
      <section className="col-span-12 lg:col-span-8 xl:col-span-9 space-y-4">

        {/* A. 导出源文件选择（原：selectedExportFile 输入 + 选择按钮） */}
        <div
          className="p-4 rounded-xl"
          style={{
            background: 'rgba(192, 197, 206, 0.05)',
            border: '1px solid rgba(192, 197, 206, 0.15)'
          }}
        >
          {/* 👉 把“导出JSON路径输入 + 选择文件按钮 + 校验”这整块原封不动放进来 */}
          {/* 原 onChange/onClick 逻辑不要改 */}
        </div>

        {/* B. 导出选项（命名规则/去重策略/扫描模式等） */}
        <div
          className="p-4 rounded-xl"
          style={{
            background: 'rgba(192, 197, 206, 0.05)',
            border: '1px solid rgba(192, 197, 206, 0.15)'
          }}
        >
          {/* 👉 把“命名规则/冲突策略/scanOnly/forceMp3/ncmdump 等选项”这一卡片放进来 */}
          {/* 可内部再用 grid grid-cols-1 md:grid-cols-2 gap-4 做两列排布；控件样式不变 */}
        </div>

        {/* C. 导出目标（导出目录/路径等） */}
        <div
          className="p-4 rounded-xl"
          style={{
            background: 'rgba(192, 197, 206, 0.05)',
            border: '1px solid rgba(192, 197, 206, 0.15)'
          }}
        >
          {/* 👉 把“导出目录/根路径选择”等卡片放进来 */}
        </div>

        {/* D. 操作区（验证配置/开始导出/停止） */}
        <div
          className="p-4 rounded-xl"
          style={{
            background: 'rgba(192, 197, 206, 0.05)',
            border: '1px solid rgba(192, 197, 206, 0.15)'
          }}
        >
          {/* 👉 保留你原有按钮与进度条，只调整父容器。按钮组可用 flex-wrap gap-3，保持原按钮风格 */}
        </div>
      </section>

      {/* 右：任务状态/进度/日志/队列（固定宽度列；移动端自动下沉） */}
      <aside className="col-span-12 lg:col-span-4 xl:col-span-3 space-y-4">

        {/* E. 任务状态（task_status / progress / stage） */}
        <div
          className="p-4 rounded-xl"
          style={{
            background: 'rgba(192, 197, 206, 0.05)',
            border: '1px solid rgba(192, 197, 206, 0.15)'
          }}
        >
          {/* 👉 把“整理/导出状态小卡片”放进来；不改颜色逻辑 */}
        </div>

        {/* F. 进度条与时间（开始/预计/结束） */}
        <div
          className="p-4 rounded-xl"
          style={{
            background: 'rgba(192, 197, 206, 0.05)',
            border: '1px solid rgba(192, 197, 206, 0.15)'
          }}
        >
          {/* 👉 原进度条/时间信息（Progress 组件等）直接放入 */}
        </div>

        {/* G. 最近日志（可滚动区域） */}
        <div
          className="p-4 rounded-xl max-h-[50vh] overflow-auto"
          style={{
            background: 'rgba(192, 197, 206, 0.05)',
            border: '1px solid rgba(192, 197, 206, 0.15)'
          }}
        >
          {/* 👉 原“日志列表/任务历史/错误提示”整体放入 */}
        </div>

        {/* H. （可选）导出队列/待处理项（如果你有） */}
        <div
          className="p-4 rounded-xl"
          style={{
            background: 'rgba(192, 197, 206, 0.05)',
            border: '1px solid rgba(192, 197, 206, 0.15)'
          }}
        >
          {/* 👉 原“队列/待处理任务”卡片放入；没有就删掉此容器 */}
        </div>
      </aside>
    </div>
  </motion.div>
)}
```

> 说明：
>
> 1. **没有改任意控件的 className/颜色/透明度**，只换父容器的 **grid 列**与 **卡片分组**；
> 2. 右侧仅作为信息侧栏，不会影响你的逻辑（所有状态仍来自相同的 state 与回调）；
> 3. 小屏下自动堆成单列（Tailwind 自适应），不用额外媒体查询；
> 4. `max-h` + `overflow-auto` 只加在日志/列表容器，避免页面无限拉长（视觉风格不变）。

---

# 统一尺寸细化（可选的小改，不改视觉）

这些是**尺寸**级别的小优化（不碰色彩/边框）：

* 表单组内部：

  * `label`、`input` 横排时，用：`grid grid-cols-1 md:grid-cols-3 gap-3`，其中 `label` 占 `md:col-span-1`，输入控件占 `md:col-span-2`。
* 多个开关/单选行：`flex flex-wrap gap-3`，保持原按钮样式。
* 文件/路径列表：外容器加 `max-h-[40vh] overflow-auto`。

---

# 放回去的位置清单（告诉 Cursor）

把你原 export 页里这些块“原封不动”搬到新容器的 A\~H 槽位（事件/状态不变）：

* A：`selectedExportFile` 路径输入 + “选择文件/校验”按钮
* B：命名规则、冲突策略、`scanOnly`、`forceMp3`、`ncmdump` 等
* C：导出目录/根路径
* D：操作按钮：验证配置 / 开始导出 / 停止 +（若有）阶段提示
* E：任务状态（`task_status`、`progress`、`stage`）
* F：时间信息（开始/预计/结束）与 `Progress`
* G：最近日志/任务历史
* H：队列视图（如有）

---

# 为什么这样就干净了（但外观没变）

* **视觉 token 完全复用**：仍是你的银色/深空/玻璃层；
* **空间秩序**：横向切两栏，用户左手“配参数”，右手“看状态”；
* **滚动隔离**：日志独立滚动不把整页撑爆；
* **小屏友好**：自动回落单列，依然是你原来的样子。

需要我把这段补丁直接应用到你包里并导出一个“只改布局”的分支 zip 吗？（我只会移动容器与类名，不会改任何控件/事件/颜色。）
